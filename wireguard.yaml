---
- name: install wireguard
  hosts: wireguard-server
  become: true
  become_user: root

  tasks:
    - name: install iptables and wireguard packages
      ansible.builtin.apt:
        force_apt_get: true
        update_cache: true
        pkg:
          - wireguard
          - iptables
          #- resolvconf
          - g++
          - make
          - git

- name: config servers for routing
  hosts: wireguard-server
  become: true
  become_user: root
  roles:
    - config-routing

- name: config bridge server
  hosts: wireguard-bridge-server
  become: true
  become_user: root
  roles:
    - config-bridge-server

- name: Generate private and public key for servers
  hosts: localhost
  gather_facts: no
  tasks:
    - name: generate bridge private key
      ansible.builtin.command: wg genkey
      register: bridge_private_key
    - name: show private key
      ansible.builtin.debug:
        msg: "{{ bridge_private_key.stdout }}"
    - name: generate bridge public key
      ansible.builtin.shell: echo {{ bridge_private_key.stdout }} | wg pubkey
      register: bridge_public_key
    - name: show bridge public key
      ansible.builtin.debug:
        msg: "{{ bridge_public_key.stdout }}"
    - name: generate upstream private key
      ansible.builtin.command: wg genkey
      register: upstream_private_key
    - name: show upstream private key
      ansible.builtin.debug:
        msg: "{{ upstream_private_key.stdout }}"
    - name: generate upstream public key
      ansible.builtin.shell: echo {{ upstream_private_key.stdout }} | wg pubkey
      register: upstream_public_key
    - name: show public key
      ansible.builtin.debug:
        msg: "{{ upstream_public_key.stdout }}"
        

- name: Generate config file and start wireguard interface in bridge server
  hosts: wireguard-bridge-server
  become: true
  become_user: root
  gather_facts: no
  vars:
    udp2raw_local_port: 3330
    upstream_endpoint_ip: "{{ groups['wireguard-upstream-server'][0] }}"
    wireguard_interface:
      name: wg0
      privatekey: "{{ hostvars.localhost.bridge_private_key.stdout }}"
      ip_address: 10.100.110.1
      listen_port: 3333
      table:
        enable: true
        name: custom
    wireguard_peer:
      - publickey: "{{ hostvars.localhost.upstream_public_key.stdout }}"
        allowed_ip: "10.100.110.2, 0.0.0.0/0"
        #endpoint_ip_address: "{{ groups['wireguard-upstream-server'][0] }}"
        endpoint_ip_address: 127.0.0.1
        endpoint_port: 8880
  roles:
    - config-wireguard
    - config-udp2raw


- name: Generate config file and start wireguard interface in upstream server
  hosts: wireguard-upstream-server
  gather_facts: no
  become: true
  become_user: root
  vars:
    udp2raw_local_port: 8880
    upstream_endpoint_ip: "{{  groups['wireguard-bridge-server'][0] }}"
    wireguard_interface:
      name: wg0
      privatekey: "{{ hostvars.localhost.upstream_private_key.stdout }}"
      ip_address: 10.100.110.2
      listen_port: 8888
      table:
        enable: false
    wireguard_peer:
      - publickey: "{{ hostvars.localhost.bridge_public_key.stdout }}"
        allowed_ip: 10.100.110.1
        #endpoint_ip_address: "{{ groups['wireguard-bridge-server'][0] }}"
        endpoint_ip_address: 127.0.0.1
        endpoint_port: 3330
  roles:
    - config-wireguard
    - config-udp2raw

